fragment role on RoleResponse {
  id
  name
  position
  hexColor
  groupId
}

fragment user on UserResponse {
  id
  createdAt
  username
  about
  avatarURL
  bot
}

fragment author on AuthorResponse {
  id
  createdAt
  username
  about
  avatarURL
  bot
  socialAccounts {
    ...socialAccountWithoutAuth
  }
  roles {
    ...role
  }
}

fragment myUser on MyUserResponse {
  id
  createdAt
  username
  about
  name
  phoneNumber
  avatarURL
  bot
  socialAccounts {
    ...socialAccount
  }
  roles {
    ...role
  }
}

query FindUser(
  $provider: String
  $socialId: String
  $username: String
) {
  findUser(provider: $provider, socialId: $socialId, username: $username) {
    ...user
  }
}

query FindAuthor(
  $id: ID
  $username: String
) {
  findAuthor(
    id: $id
    username: $username
  ) {
    ...author
  }
}

query FindMyUser {
  findMyUser {
    ...myUser
  }
}

query FindUsers(
  $where: FindUsersWhereInput
  $orderBy: FindUsersOrderByInput
  $keyword: String
  $target: String
  $cursor: ID
  $skip: Int!
  $take: Int!
) {
  findUsers(
    where: $where
    orderBy: $orderBy
    keyword: $keyword
    target: $target
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    edges {
      node {
        ...user
      }
      cursor
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}

mutation UpdateUser(
  $input: UpdateUserInput!
) {
  updateUser(input: $input)
}

# NOTE
# createUser -> signInUser

# TODO
# deleteUser

mutation LinkSocialProfile($input: LinkSocialProfileInput!) {
  linkSocialProfile(input: $input)
}
