fragment comment on CommentResponse {
  id
  createdAt
  updatedAt
  parentId
  postId
  content
  pinned
  reactions {
    ...reaction
  }
}

fragment commentWithAuthor on CommentWithAuthorResponse {
  id
  createdAt
  updatedAt
  parentId
  postId
  content
  pinned
  user {
    ...author
  }
  reactions {
    ...reaction
  }
  images {
    ...image
  }
}

fragment commentCount on CommentCountResponse {
  postId
  count
}

fragment updatedCommentResponse on UpdatedCommentResponse {
  id
  updatedAt
  content
  pinned
}

fragment deletedCommentResponse on DeletedCommentResponse {
  id
}

mutation CreateComment($input: CreateCommentInput!) {
  createComment(input: $input) {
    ...mutationResponse
  }
}

mutation UpdateComment($input: UpdateCommentInput!) {
  updateComment(input: $input) {
    ...mutationResponse
  }
}

mutation DeleteComment($input: DeleteCommentInput!) {
  deleteComment(input: $input) {
    ...mutationResponse
  }
}

query FindComment(
  $id: ID
  $postId: ID
) {
  findComment(
    id: $id
    postId: $postId
  ) {
    ...comment
  }
}

query FindComments(
  $where: FindCommentsWhereInput
  $orderBy: FindCommentsOrderByInput
  $keyword: String
  $target: String
  $cursor: ID
  $skip: Int!
  $take: Int!
) {
  findComments(
    where: $where
    orderBy: $orderBy
    keyword: $keyword
    target: $target
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    edges {
      node {
        ...commentWithAuthor
      }
      cursor
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}

query FindCommentCount(
  $postId: ID!
) {
  findCommentCount(
    postId: $postId
  ) {
    ...commentCount
  }
}

subscription CommentCreated($postId: ID!) {
  commentCreated(postId: $postId) {
    ...commentWithAuthor
  }
}

subscription CommentUpdated($postId: ID!) {
  commentUpdated(postId: $postId) {
    ...updatedCommentResponse
  }
}

subscription CommentDeleted($postId: ID!) {
  commentDeleted(postId: $postId) {
    ...deletedCommentResponse
  }
}
