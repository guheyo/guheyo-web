fragment comment on CommentResponse {
  id
  createdAt
  updatedAt
  parentId
  postId
  content
}

fragment commentWithAuthor on CommentWithAuthorResponse {
  id
  createdAt
  updatedAt
  parentId
  postId
  content
  user {
    ...author
  }
}

fragment deleteCommentResult on DeleteCommentResult {
  id
}

mutation CreateComment($input: CreateCommentInput!) {
  createComment(input: $input)
}

mutation UpdateComment($input: UpdateCommentInput!) {
  updateComment(input: $input) {
    ...comment
  }
}

mutation DeleteComment($input: DeleteCommentInput!) {
  deleteComment(input: $input) {
    ...deleteCommentResult
  }
}

query FindComment(
  $id: ID
  $postId: ID
) {
  findComment(
    id: $id
    postId: $postId
  ) {
    ...comment
  }
}

query findComments(
  $where: JSON
  $orderBy: JSON
  $keyword: String
  $cursor: ID
  $skip: Int!
  $take: Int!
) {
  findComments(
    where: $where
    orderBy: $orderBy
    keyword: $keyword
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    edges {
      node {
        ...commentWithAuthor
      }
      cursor
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}

subscription CommentCreated {
  commentCreated {
    ...commentWithAuthor
  }
}
