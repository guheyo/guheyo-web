fragment thread on ThreadResponse {
  post {
    ...post
  }
  id
  createdAt
  updatedAt
  content
}

fragment threadPreview on ThreadPreviewResponse {
  post {
    ...postPreviewWithAuthor
  }
  id
  createdAt
  updatedAt
  content
}

query FindThreadPreviews(
  $where: FindThreadPreviewsWhereInput
  $orderBy: FindThreadPreviewsOrderByInput
  $keyword: String
  $target: String
  $cursor: ID
  $skip: Int!
  $take: Int!
) {
  findThreadPreviews(
    where: $where
    orderBy: $orderBy
    keyword: $keyword
    target: $target
    cursor: $cursor
    skip: $skip
    take: $take
  ) {
    edges {
      node {
        ...threadPreview
      }
      cursor
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}

query FindThreadPreview(
  $id: ID
  $slug: String
) {
  findThreadPreview(
    id: $id
    slug: $slug
  ) {
    ...threadPreview
  }
}

query FindThread(
  $id: ID
  $slug: String
) {
  findThread(
    id: $id
    slug: $slug
  ) {
    ...thread
  }
}

mutation CreateThread($input: CreateThreadInput!) {
  createThread(input: $input) {
    ...mutationResponse
  }
}

mutation UpdateThread($input: UpdateThreadInput!) {
  updateThread(input: $input) {
    ...mutationResponse
  }
}

mutation DeleteThread(
  $id: ID!
) {
  deleteThread(
    id: $id
  ) {
    ...mutationResponse
  }
}
